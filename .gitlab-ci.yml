stages:
  - workspace
  - deps
  - env
  - lint
  - test
  - build
  - analyze
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_TLS_CERTDIR: ""
  PROJECT_VERSION: ${CI_COMMIT_REF_SLUG}
  DOCKER_REGISTRY: docker.justinkonratt.com
  ORGANIZATION: codesdowork
  PROJECT: monorepo
  IMAGE_BASE: ${DOCKER_REGISTRY}/${ORGANIZATION}/${PROJECT}
  DOCKER_VERSION: 27.2.0
  DEPS_CACHE_POLICY: pull
  ENV_CACHE_POLICY: pull
  MASTER_BRANCH: master
  DEV_BRANCH: develop

default:
  image: ${IMAGE_BASE}/workspace:${PROJECT_VERSION}
  services:
    - name: docker:${DOCKER_VERSION}-dind
      alias: docker
  cache:
    - key:
        files:
          - pnpm-lock.yaml
      paths:
        - node_modules
      policy: $DEPS_CACHE_POLICY
    - key: nx-cache
      paths:
        - .nx
    - key: cache-${CI_COMMIT_SHA}
      paths:
        - ./.env
        - ./packages/**/.env
        - ./*.pem
        - ./packages/**/*.pem
        - ./**/.ssh/
      policy: $ENV_CACHE_POLICY
  before_script:
    - export PATH="$PWD/node_modules/.bin:$PATH"
    - docker login -u ${DOCKER_HUB_USER} -p ${DOCKER_HUB_PASSWORD}
    - docker login -u ${DOCKER_REGISTRY_USER} -p ${DOCKER_REGISTRY_PASSWORD} ${DOCKER_REGISTRY}

build workspace image:
  stage: workspace
  image: docker:${DOCKER_VERSION}
  cache: []
  script:
    - docker compose build --push base
    - docker compose build --push workspace
  resource_group: single

install deps:
  stage: deps
  variables:
    DEPS_CACHE_POLICY: pull-push
  script:
    - nci
  resource_group: single

generate env files:
  stage: env
  variables:
    ENV_CACHE_POLICY: push
  script:
    - if [ "$CI_COMMIT_BRANCH" = "$MASTER_BRANCH" ]; then export STAGE=PROD; elif [ "$CI_COMMIT_BRANCH" = "$DEV_BRANCH" ]; then export STAGE=TEST,PROD; else export STAGE=DEV,PROD; fi
    - nx g env-files ${STAGE} ${BITWARDEN_USER} ${BITWARDEN_PASSWORD}
  resource_group: single

check formatting:
  stage: lint
  script:
    - nx format:check
  resource_group: single

eslint:
  stage: lint
  script:
    - nx affected -t lint
  resource_group: single

secretlint:
  stage: lint
  script:
    - secretlint --secretlintignore .gitignore "**/*"
  resource_group: single

svelte check:
  stage: lint
  script:
    - nx affected -t svelte-check
  resource_group: single

lint with sonar:
  stage: lint
  cache: []
  image:
    name: sonarsource/sonar-scanner-cli:11.1
    entrypoint: [""]
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - $MASTER_BRANCH
  resource_group: single

audit:
  stage: lint
  script:
    - na audit --audit-level=high
  allow_failure: true
  resource_group: single

test:
  stage: test
  script:
    - nx affected -t test
  resource_group: single

build images:
  stage: build
  script:
    - docker compose build workspace-deps
    - nx affected -t docker-build --parallel=1
    - nx affected -t docker-push
    - nx docker-build just-documentation
    - nx docker-push just-documentation
  resource_group: single

tag latest images:
  stage: build
  script:
    - nx affected -t docker-tag --args=latest
    - export PROJECT_VERSION=latest
    - nx affected -t docker-push
  only:
    - $MASTER_BRANCH
  resource_group: single

trivy:
  stage: analyze
  script:
    - nx affected -t docker-pull
    - nx affected -t trivy
    - nr trivy
  allow_failure: true
  resource_group: single

lighthouse:
  stage: analyze
  script:
    - nx affected -t lighthouse --parallel=1
  artifacts:
    paths:
      - ./.lighthouse-reports/
  resource_group: single

deploy live:
  stage: deploy
  script:
    - if [ "$CI_COMMIT_BRANCH" = "$MASTER_BRANCH" ]; then nx affected -t deploy; else nx affected -t deploy -c development; fi
  only:
    - $MASTER_BRANCH
    - $DEV_BRANCH
  resource_group: single
