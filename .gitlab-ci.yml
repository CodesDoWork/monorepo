stages:
  - nx
  - lint
  - deploy

.nx-install: &nx-install
  - apk add git
  - npm install -g @antfu/ni pnpm
  - pnpm config set store-dir .pnpm-store
  - nci

.cache: &cache
  cache:
    key: pnpm-store
    paths:
      - .pnpm-store/

.docker: &docker
  image: docker:26.1.4
  stage: deploy
  services:
    - name: docker:26.1.4-dind
      alias: docker-service
  <<: *cache
  variables:
    DOCKER_HOST: tcp://docker-service:2375/
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add npm
    - *nx-install
    - docker info
    - docker login -u ${DOCKER_REGISTRY_USER} -p ${DOCKER_REGISTRY_PASSWORD} ${DOCKER_REGISTRY}
    - nr docker:build-workspace

nx-workspace:
  image: node:20.12.2-alpine
  stage: nx
  <<: *cache
  before_script:
    - *nx-install
  script:
    - npx nx affected -t format:check
    - npx nx affected -t lint
    - npx nx affected -t test
    - npx nx affected -t pre-build
    - npx nx affected -t build -c production
  except:
    - master
    - /^docker-test\/.*$/
  resource_group: single

docker-test:
  <<: *docker
  script:
    - npx nx affected -t build-image --parallel 1
  only:
    - /^docker-test\/.*$/
  resource_group: single

sonarqube-scanner:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  stage: lint
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - master
  resource_group: single

deploy:
  <<: *docker
  script:
    # ssh
    - apk add openssh-client
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - grep "${KNOWN_HOST_PUB}" ~/.ssh/known_hosts || echo "${KNOWN_HOST_PUB}" > ~/.ssh/known_hosts
    - echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa

    # copy root env
    - scp .env ${SSH_USER}@${SSH_HOST}:/opt/monorepo/.env

    # build images
    - npx nx run-many -t pre-build
    - npx nx affected --base=remotes/origin/master~1 -t build-image --parallel 1
    - npx nx build-image server-documentation

    # copy deploy targets, pull and run docker containers
    - npx nx run-many -t deploy
    - scp -rp ./deploy/* ${SSH_USER}@${SSH_HOST}:/

    # docker login
    - ssh ${SSH_USER}@${SSH_HOST} docker login -u ${DOCKER_REGISTRY_USER} -p ${DOCKER_REGISTRY_PASSWORD} ${DOCKER_REGISTRY}

    # run deploy commands
    - npx nx run-many -t deploy-command --parallel 1
    - scp deploy-commands.sh ${SSH_USER}@${SSH_HOST}:/tmp
    - ssh ${SSH_USER}@${SSH_HOST} chmod +x /tmp/deploy-commands.sh
    - ssh ${SSH_USER}@${SSH_HOST} /tmp/deploy-commands.sh
  only:
    - master
  resource_group: single
