variables_hash_max_size 2024;
variables_hash_bucket_size 128;

map $remote_addr $is_private_ip {
    default           false;
    192.168.192.243   false;
    ~^192\.168\.192\. true;
}

server {
	listen 80;
	listen [::]:80;
    return 301 https://$host$request_uri;
}

server {
    set_by_lua_block $adminer_port { return os.getenv("ADMINER_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name adminer.justinkonratt.com;

    if ($is_private_ip = false) {
        return 403;
    }

    location / {
        set $upstream adminer:$adminer_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $auth_port { return os.getenv("AUTH_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name auth.justinkonratt.com;

    location / {
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Protocol https;
        proxy_set_header Host auth.justinkonratt.com;
        set $upstream auth:$auth_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $bitwarden_port { return os.getenv("BITWARDEN_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name bitwarden.justinkonratt.com;

    location / {
        set $upstream bitwarden:$bitwarden_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $ghost_port { return os.getenv("GHOST_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name blog.justinkonratt.com;

    location / {
        set $upstream ghost:$ghost_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $dashboard_port { return os.getenv("DASHBOARD_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name dashboard.justinkonratt.com;

    access_by_lua_file /etc/nginx/lua/access.lua;

    location / {
        set $upstream dashboard:$dashboard_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $dns_web_port { return os.getenv("DNS_WEB_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name dns.justinkonratt.com;

    if ($is_private_ip = false) {
        return 403;
    }

    location / {
        set $upstream dns:$dns_web_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $docker_registry_port { return os.getenv("DOCKER_REGISTRY_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name docker.justinkonratt.com;

    if ($is_private_ip = false) {
        return 403;
    }

    location / {
        client_max_body_size 1G;
        set $upstream docker-registry:$docker_registry_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $documentation_port { return os.getenv("DOCUMENTATION_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name docs.justinkonratt.com;

    if ($is_private_ip = false) {
        return 403;
    }

    location / {
        set $upstream documentation:$documentation_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $doku_port { return os.getenv("DOKU_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name doku.justinkonratt.com;

    if ($is_private_ip = false) {
        return 403;
    }

    location / {
        set $upstream doku:$doku_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $gitlab_port { return os.getenv("GITLAB_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name gitlab.justinkonratt.com;

    if ($is_private_ip = false) {
        return 403;
    }

    location / {
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Protocol https;
        proxy_set_header Host $host;
        client_max_body_size 100M;
        set $upstream gitlab:$gitlab_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $grafana_port { return os.getenv("GRAFANA_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name grafana.justinkonratt.com;

    if ($is_private_ip = false) {
        return 403;
    }

    location / {
        set $upstream grafana:$grafana_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $just_site_port { return os.getenv("JUST_SITE_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name justinkonratt.com;

    location / {
        set $upstream just-site:$just_site_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $linkwarden_port { return os.getenv("LINKWARDEN_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name links.justinkonratt.com;

    location / {
        rewrite ^/api/auth/(.*)$ /api/v1/auth/$1 last;
        set $upstream linkwarden:$linkwarden_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $music_port { return os.getenv("MUSIC_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name music.justinkonratt.com;

    location /callback-auth {
        access_by_lua_file /etc/nginx/lua/access.lua;
    }

    location /callback-logout {
        access_by_lua_file /etc/nginx/lua/access.lua;
    }

    location /rest {
        set $upstream music:$music_port;
        proxy_pass http://$upstream;
    }

    location / {
        access_by_lua_file /etc/nginx/lua/access.lua;
    	set $upstream music:$music_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $music_downloader_port { return os.getenv("MUSIC_DOWNLOADER_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name music-downloader.justinkonratt.com;

    if ($is_private_ip = false) {
        return 403;
    }

    access_by_lua_file /etc/nginx/lua/access.lua;

    location / {
        set $upstream music-downloader:$music_downloader_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $server_address { return os.getenv("SERVER_ADDRESS"); }
    set_by_lua_block $netdata_port { return os.getenv("NETDATA_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name netdata.justinkonratt.com;

    if ($is_private_ip = false) {
        return 403;
    }

    access_by_lua_file /etc/nginx/lua/access.lua;

    location / {
        set $upstream $server_address:$netdata_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $portainer_port { return os.getenv("PORTAINER_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name portainer.justinkonratt.com;

    if ($is_private_ip = false) {
        return 403;
    }

    location / {
        set $upstream portainer:$portainer_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $prometheus_port { return os.getenv("PROMETHEUS_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name prometheus.justinkonratt.com;

    if ($is_private_ip = false) {
        return 403;
    }

    access_by_lua_file /etc/nginx/lua/access.lua;

    location / {
        set $upstream prometheus:$prometheus_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $scoreboard_port { return os.getenv("SCOREBOARD_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name scoreboard.justinkonratt.com;

    if ($is_private_ip = false) {
        return 403;
    }

    location / {
        set $upstream scoreboard:$scoreboard_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $sonarqube_port { return os.getenv("SONARQUBE_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name sonar.justinkonratt.com;

    location / {
        set $upstream sonarqube:$sonarqube_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $vpn_port { return os.getenv("VPN_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name vpn.justinkonratt.com;

    if ($is_private_ip = false) {
        return 403;
    }

    location / {
        set $upstream vpn:$vpn_port;
        proxy_pass http://$upstream;
    }
}

server {
    set_by_lua_block $wandb_port { return os.getenv("WANDB_PORT"); }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name wandb.justinkonratt.com;

    location / {
        set $upstream wandb:$wandb_port;
        proxy_pass http://$upstream;
    }
}
