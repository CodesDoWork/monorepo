x-build-args:
  build: &build-args
    args:
      - IMAGE_BASE

services:
  base:
    build:
      dockerfile: base.Dockerfile
    image: ${IMAGE_BASE}/base
    profiles:
      - base

  workspace:
    build:
      <<: *build-args
      dockerfile: workspace.Dockerfile
    image: ${IMAGE_BASE}/workspace
    network_mode: host
    profiles:
      - worspace
    tty: true
    volumes:
      - .:/workspace
      - /workspace/node_modules
      - //var/run/docker.sock:/var/run/docker.sock

  db:
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USERNAME}
    healthcheck:
      test: pg_isready -U $DB_USERNAME
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data

  cms:
    environment:
      - SECRET=${CMS_SECRET}
      - ADMIN_EMAIL=${CMS_USERNAME}
      - ADMIN_PASSWORD=${CMS_PASSWORD}
      - PUBLIC_URL=https://cms.${DOMAIN}
      - DB_CLIENT=pg
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=directus
      - DB_USER=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    image: directus/directus:11
    restart: unless-stopped
    volumes:
      - directus-uploads:/directus/uploads
      - directus-extensions:/directus/extensions

  tunnel:
    command:
      - tunnel
      - --no-autoupdate
      - run
      - --token
      - ${TUNNEL_TOKEN}
    image: cloudflare/cloudflared
    restart: unless-stopped

  website:
    build:
      <<: *build-args
      context: .
      dockerfile: ../monorepo/packages/zinzow/website/Dockerfile
    cap_drop:
      - ALL
    environment:
      - PORT=4300
    env_file:
      - ../monorepo/packages/zinzow/website/.env
    image: ${IMAGE_BASE}/website
    read_only: true
    restart: unless-stopped

volumes:
  postgres-data:
  directus-uploads:
  directus-extensions:
